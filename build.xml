
<!-- vim: set tabstop=8 shiftwidth=4 expandtab : -->
<project name="llvm-j" basedir="." default="build"
         xmlns:unless="ant:unless"
         xmlns:ivy="antlib:org.apache.ivy.ant" >
    <!-- Include a file in which all properties can be overridden.
         This file won't get checked in and can be used to change properties
         locally for one machine if necessary. -->
    <property file="build.properties"/>
    <property environment="env"/>

    <property name="llvm.version" value="3.9.1" />

    <property name="ivy.configurations" value="build, runtime, test, format-source, checkstyle, spotbugs"/>
    <property name="package" value="llvm_j"/>
    <property name="jar.excludes" value=""/>
    <property name="ivy.contrib.present" value="true"/> <!-- always download sources -->

    <!-- Maven Central metadata -->
    <property name="ivy.pom.description" value="Java bindings for LLVM library"/>
    <property name="ivy.pom.url" value="https://github.com/sosy-lab/llvm-j"/>
    <property name="ivy.pom.name" value="llvm-j"/>
    <property name="ivy.pom.groupId" value="org.sosy-lab"/>
    <property name="ivy.pom.artifactId" value="llvm-j"/>

    <property name="llvm.bindings" location="src/org/sosy_lab/llvm_j/binding/LLVMLibrary.java" />

    <!-- We activate even the experimental error-prone checks, with a few exceptions:
        - StaticOrDefaultInterfaceMethod: only relevant for Android
        - FieldCanBeFinal: not possible for our @Option fields
        - TestExceptionChecker: TODO
        - ParameterPackage: buggy
        - ConstructorInvokesOverridable: buggy
        - ConstructorLeaksThis: buggy
        - FieldMissingNullable: buggy
        - ReturnMissingNullable: buggy
    -->
    <!-- Temporarily disable the VarChecker on Java 10 until
         https://github.com/google/error-prone/issues/1054 is fixed. -->
    <condition property="java10">
        <matches string="${ant.java.version}" pattern="10"/>
    </condition>
    <condition property="errorprone.options" value="
        -XepPatchLocation:${basedir}
        -XepPatchChecks:
        -XepAllDisabledChecksAsWarnings
        -Xep:StaticOrDefaultInterfaceMethod:OFF
        -Xep:FieldCanBeFinal:OFF
        -Xep:TestExceptionChecker:OFF
        -Xep:ParameterPackage:OFF
        -Xep:ConstructorInvokesOverridable:OFF
        -Xep:ConstructorLeaksThis:OFF
        -Xep:FieldMissingNullable:OFF
        -Xep:ReturnMissingNullable:OFF
        -Xep:InconsistentOverloads:OFF
        -Xep:UngroupedOverloads:OFF
        -Xep:Var:OFF
        " else="
        -XepPatchLocation:${basedir}
        -XepPatchChecks:
        -XepAllDisabledChecksAsWarnings
        -Xep:StaticOrDefaultInterfaceMethod:OFF
        -Xep:FieldCanBeFinal:OFF
        -Xep:TestExceptionChecker:OFF
        -Xep:ParameterPackage:OFF
        -Xep:ConstructorInvokesOverridable:OFF
        -Xep:ConstructorLeaksThis:OFF
        -Xep:FieldMissingNullable:OFF
        -Xep:ReturnMissingNullable:OFF
        -Xep:InconsistentOverloads:OFF
        -Xep:UngroupedOverloads:OFF
        ">
        <isset property="java10"/>
    </condition>

    <import file="build/build-version.xml"/>
    <import file="build/build-ivy.xml"/>
    <import file="build/build-bindings.xml"/>
    <import file="build/build-compile.xml"/>
    <import file="build/build-documentation.xml"/>
    <import file="build/build-jar.xml"/>
    <import file="build/build-junit.xml"/>
    <import file="build/build-format-source.xml"/>
    <import file="build/build-checkstyle.xml"/>
    <import file="build/build-spotbugs.xml"/>
    <import file="build/build-publish.xml"/>
    <import file="build/build-publish-library.xml"/>
    <import file="build/build-maven-publish.xml"/>

    <path id="classpath">
        <pathelement location="${class.dir}"/>
        <fileset dir="${ivy.lib.dir}" includes="runtime/*.jar test/*.jar build/annotations.jar build/error_prone_annotations.jar"/>
    </path>


    <!-- Main targets -->

    <target name="clean" description="Clean">
        <delete includeEmptyDirs="true">
            <fileset dir="." includes="${class.dir}/** ${ivy.module}-*.jar ivy-*.xml *.so *.jar"/>
        </delete>
    </target>

    <target name="build" depends="build-project" description="Build"/>

    <target name="dist" depends="jar, sources" description="Make a distributable release"/>

    <target name="tests" depends="unit-tests" description="Run all tests"/>

    <target name="publish" depends="tests, dist, publish-artifacts" description="Publish current version to Ivy repository"/>

    <target name="documentation" depends="javadoc" description="Build documentation"/>

    <target name="all-checks" description="Run all tests and checks">
        <!-- We have to use antcall here to run clean twice. -->
        <antcall target="clean"/>
        <antcall target="build-project-ecj"/>
        <antcall target="clean"/>
        <antcall target="standard-checks"/>
    </target>

    <target name="build-project-ecj" depends="build-dependencies" description="Build project with the Eclipse JDT compiler">
        <condition property="java8">
            <equals arg1="${ant.java.version}" arg2="1.8"/>
        </condition>
        <antcall target="compile.build-project-ecj"/>
    </target>

    <!-- Auxiliary targets -->

    <target name="init" depends="determine-version">
        <echo message="Building ${ant.project.name} ${version}"/>
        <mkdir dir="${class.dir}"/>
    </target>

    <target name="build-dependencies" depends="init, resolve-dependencies"/>

    <target name="standard-checks" depends="spotbugs, checkstyle, javadoc"/>
</project>
