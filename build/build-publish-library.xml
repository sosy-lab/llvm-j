<?xml version="1.0" encoding="UTF-8" ?>
<!-- vim: set tabstop=8 shiftwidth=4 expandtab sts=4 filetype=ant fdm=marker: -->
<project name="publish-library" basedir="."
        xmlns:ivy="antlib:org.apache.ivy.ant">

    <property name="lib.native" location="${basedir}/lib/native" />

    <condition property="llvm.library" value="${lib.native}/libLLVM-${llvm.version}.so">
        <isset property="llvm.version" />
    </condition>

    <target name="-check-llvm-version-set">
        <fail unless="llvm.version">
            Please specify the llvm version with the flag -Dllvm.version=... .
        </fail>
    </target>

    <target name="-check-llvm-lib-exists">
        <available file="${llvm.library}" property="library.exist" />
    </target>

    <target name="clean-library" depends="init, -check-llvm-version-set">
        <delete includeEmptyDirs="true">
            <fileset dir="${lib.native}" includes="libLLVM*${llvm.version}* libllvm*${llvm.version}* libtinfo.so.5 libedit.so.2 libbsd.so.0 data.tar.gz Packages Packages.gz" />
        </delete>
    </target>

    <target name="download-library" depends="init, -check-llvm-version-set, -check-llvm-lib-exists" unless="${library.exist}">
        <mkdir dir="${lib.native}"/>
        <exec executable="make">
            <arg value="-f" />
            <arg value="Makefile.libraries" />
        </exec>
        <available file="${llvm.library}" property="library.exist" />
        <fail unless="library.exist"
            message="Wasn't able to find ${llvm.library}, even though the task should've created it." />

        <exec executable="ldd" outputproperty="llvm.library.lddinfo">
            <arg value="${llvm.library}" />
        </exec>
        <echo level="verbose" message="${llvm.library.lddinfo}" />

    </target>

    <target name="publish-lib" depends="-check-llvm-version-set, download-library, load-ivy"
        description="Publish LLVM library to Ivy repo.">

        <fail unless="version.publishable"
            message="Cannot publish version ${version}, only unmodified working copies may be published." />

        <ivy:resolve conf="full,single" file="lib/ivy_libLLVM-${llvm.version}.xml" />
        <available property="ivy.hasrepository" file="repository/${ivy.organisation}/${ivy.module}" />
        <fail unless="ivy.hasrepository">
            Cannot publish without 'repository' dir, please run 'svn co https://svn.sosy-lab.org/software/ivy/repository/${ivy.organisation}/${ivy.module} repository/${ivy.organisation}/${ivy.module}'.
        </fail>

        <property name="pubrevision" value="${llvm.version}-sosy${version}" />
        <ivy:publish
                pubrevision="${pubrevision}"
                resolver="Sosy-Lab-Publish"
                conf="full,single"
                status="release"
                haltonmissing="true"
                >
                <artifacts pattern="${lib.native}/[artifact].[ext]" />
                <artifacts pattern="${lib.native}/[artifact]-${llvm.version}.[ext]" />
        </ivy:publish>
        <echo>
            You now want to run
            svn add repository/${ivy.organisation}/${ivy.module}/*-${pubrevision}*
            svn ci repository/${ivy.organisation}/${ivy.module} -m"publish version ${pubrevision} of LLVM shared library"
            to make the new version publicly available.</echo>
    </target>

</project>
